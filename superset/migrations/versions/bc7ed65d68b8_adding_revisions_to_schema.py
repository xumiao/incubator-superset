"""adding revisions to schema

Revision ID: bc7ed65d68b8
Revises: 234e8eaa06fe
Create Date: 2018-11-27 00:25:24.732220

"""

# revision identifiers, used by Alembic.
revision = 'bc7ed65d68b8'
down_revision = '234e8eaa06fe'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    revisionmode = postgresql.ENUM('NEW', 'OR', 'AND', name='revisionmode', create_type=False)
    revisionmode.create(op.get_bind())
    status = postgresql.ENUM('DRAFT', 'READY', name='status', create_type=False)
    status.create(op.get_bind())

    op.create_table('revisions',
    sa.Column('params', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mode', revisionmode, nullable=False),
    sa.Column('query', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lambda_revision',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lambda_id', sa.Integer(), nullable=True),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lambda_id'], ['lambdas.id'], ),
    sa.ForeignKeyConstraint(['revision_id'], ['revisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('lambda_user')
    op.add_column('lambdas', sa.Column('anchor', sa.Boolean(), nullable=True))
    op.add_column('lambdas', sa.Column('changed_on', sa.DateTime(), nullable=True))
    op.add_column('lambdas', sa.Column('cloned_from_id', sa.Integer(), nullable=True))
    op.add_column('lambdas', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('lambdas', sa.Column('created_on', sa.DateTime(), nullable=True))
    op.add_column('lambdas', sa.Column('current_revision', sa.Integer(), nullable=True))
    op.add_column('lambdas', sa.Column('merged_from_ids', postgresql.ARRAY(sa.Integer()), nullable=True))
    op.add_column('lambdas', sa.Column('status', status, nullable=True))
    op.create_foreign_key(None, 'lambdas', 'lambdas', ['cloned_from_id'], ['id'])
    op.create_foreign_key(None, 'lambdas', 'ab_user', ['created_by_id'], ['id'])
    op.drop_column('lambdas', 'signature')
    op.drop_column('lambdas', 'perm')
    op.drop_column('lambdas', 'code')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lambdas', sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('lambdas', sa.Column('perm', sa.VARCHAR(length=1024), autoincrement=False, nullable=True))
    op.add_column('lambdas', sa.Column('signature', sa.VARCHAR(length=1024), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'lambdas', type_='foreignkey')
    op.drop_constraint(None, 'lambdas', type_='foreignkey')
    op.drop_column('lambdas', 'status')
    op.drop_column('lambdas', 'merged_from_ids')
    op.drop_column('lambdas', 'current_revision')
    op.drop_column('lambdas', 'created_on')
    op.drop_column('lambdas', 'created_by_id')
    op.drop_column('lambdas', 'cloned_from_id')
    op.drop_column('lambdas', 'changed_on')
    op.drop_column('lambdas', 'anchor')
    op.create_table('lambda_user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('lambda_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lambda_id'], ['lambdas.id'], name='lambda_user_lambda_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], name='lambda_user_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lambda_user_pkey')
    )
    op.drop_table('lambda_revision')
    op.drop_table('revisions')
    op.execute("DROP TYPE Status;")
    op.execute("DROP TYPE RevisionMode;")
    # ### end Alembic commands ###
